{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/present-movies.js","src/models/loaderSpinner.js","src/models/genresid-name.js"],"sourcesContent":["/*\nŚCIEŻKA DZIAŁANIA PLIKUÓW JS PRZY POBIERNIU TYTUŁÓW FILMÓW Z API\n1. POPULARNE FILMY\n  - presentMovies() -> getGenres() -> fetchPopularMovies()\n  - createCards() -> namesGenres() -> movieCard() -> html\n2. WYSZUKIWANE FILMY\n  - eventListener() -> fetchSearchedMovies() -> galleryOfMovies()\n  -> getGenres() -> createCards() -> namesGenres() ->\n  -> movieCard() -> html\n\n*/\nimport axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\nimport { namesGenres } from './genresid-name';\nimport loader from './loaderSpinner';\nimport { Loading, Notify } from 'notiflix';\n// import { activeFetch, toggleHidden } from './modal-movie';\n\nconst gallery = document.querySelector('.Gallery');\nconst DEBOUNCE_DELAY = 1000;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst inputMovie = document.querySelector('.SearchInput');\nconst alert = document.querySelector('[data-header=\"alert\"]');\n//edit hubert paginacja\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\nlet nrButton = '';\n\nconst paginationNumbers = document.getElementById('Pagination-Numbers');\n\nlet currentPage = 1;\nlet pageEnd = 100;\n// let page = 1;\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\n\nconst handlePageButtonsStatus = (page, pageCount) => {\n  if (page === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (page === pageCount) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\n//set active page number\nconst handleActivePageNumber = page => {\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n  });\n\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    const pageIndex = Number(button.textContent);\n    if (pageIndex == page) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n// hubert's set active page number\n// const updateActivePage = () => {\n//   const buttons = document.querySelectorAll('.Pagination-Numbers .Nr-Button');\n//   buttons.forEach(button => {\n//     const pageNumber = parseInt(button.innerHTML);\n//     if (pageNumber === currentPage) {\n//       button.classList.add('active');\n//     } else {\n//       button.classList.remove('active');\n//     }\n//   });\n// };\n\nconst getDots = () => {\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Pagination-Btn__Dots\" id=\"Nr-Button\">\n      ...\n      </button>\n    `\n  );\n};\n\nconst getNumbers = number => {\n  const isActive = number === currentPage ? 'Pagination-Btn--Active' : '';\n\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Nr-Button ${isActive}\" id=\"Nr-Button\" >\n      ${number}\n      </button>\n    `\n  );\n};\n\n//GENERATE NUMBERS IN DIV MAIN\nconst getPagination = (page, pageCount) => {\n  paginationNumbers.innerHTML = '';\n  if (pageCount >= 9) {\n    if (page <= 5) {\n      for (let i = 1; i <= 7; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    } else if (page >= pageCount - 5) {\n      getNumbers(1);\n      getDots();\n      for (let i = pageCount - 6; i <= pageCount; i++) {\n        getNumbers(i);\n      }\n    } else {\n      getNumbers(1);\n      getDots();\n      for (let i = page - 2; i <= page + 2; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    }\n  } else if (pageCount < 9) {\n    for (let i = 1; i <= pageCount; i++) {\n      getNumbers(i);\n    }\n  }\n};\n\nwindow.addEventListener('load', () => {\n  handlePageButtonsStatus(1);\n  getPagination(1, pageEnd);\n  handleActivePageNumber(currentPage);\n\n  nextButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage++;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  prevButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage--;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  paginationNumbers.addEventListener('click', event => {\n    if (event.target.classList.contains('Nr-Button')) {\n      const pageIndex = Number(event.target.textContent);\n      if (pageIndex !== currentPage) {\n        currentPage = pageIndex;\n        if (inputMovie.value !== '') {\n          console.log('inputxxx');\n          fetchSearchedMovies(title, currentPage);\n        } else {\n          presentMovies(currentPage);\n          handlePageButtonsStatus(currentPage);\n          getPagination(currentPage);\n          handleActivePageNumber(currentPage);\n        }\n      }\n    }\n  });\n});\n\n// FUNCTION AUTOMATICALLY FETCHING MOST POPULAR MOVIES\nexport const fetchPopularMovies = async page => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n  loader();\n  // Loading.add();\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(function (response) {\n      // RENDER PAGINATION WITH TOTAL RESPONSES / 10\n      const totalPages = response.data.total_pages / 10;\n      getPagination(currentPage, totalPages);\n      handlePageButtonsStatus(currentPage, totalPages);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  Loading.remove(500);\n  return response;\n};\n\n// OFF ENTER KEY\ninputMovie.addEventListener('keypress', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n  }\n});\n\nlet title = '';\n\n//EVENT LISTENING TO SEARCHBAR INPUT\ninputMovie.addEventListener(\n  'input',\n  debounce(async event => {\n    event.preventDefault();\n    if (inputMovie.value == '') {\n      return location.reload();\n    }\n\n    title = event.target.value.trim();\n    console.log('title', title);\n    fetchSearchedMovies(title);\n    return title;\n  }, DEBOUNCE_DELAY)\n);\n\n// FUNCTION FETCHIN MOVIES BY QUERY\n// deleted from argument pageNumber\nexport const fetchSearchedMovies = async (input, page) => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n  loader();\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        page: page,\n      },\n    })\n    .then(response => {\n      // loader();\n      let pageCount = 0;\n      if (response.data.total_results % 20 === 0) {\n        pageCount = response.data.total_results / 20;\n      } else {\n        pageCount = Math.ceil(response.data.total_results / 20);\n      }\n      galleryOfMovies(response);\n      getPagination(currentPage, pageCount);\n      handlePageButtonsStatus(currentPage, pageCount);\n      // console.log(\"wynij\", response.data.total_results);\n      alert.classList.add('hidden');\n      if (response.data.results.length === 0) {\n        alert.classList.remove('hidden');\n      }\n      // Loading.remove();\n      return response;\n    })\n    .catch(() => {\n      console.log('error');\n    });\n  Loading.remove(500);\n  Notify.success(`We found ${response.data.total_results} movies!`);\n\n  return response;\n};\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched, genres);\n  });\n}\n\n// FUNCTION GETTING GENRES FROM MOVIES\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport function createCards(movie, genres) {\n  // console.log('wynik;', movie, genres);\n  // console.log('test movie:', movie[0].genre_ids);\n  // console.log('test genre:', genres[0]);\n\n  movie.map(movie => {\n    const genresName = namesGenres(movie.genre_ids, genres);\n    movieCard(movie, genresName);\n  });\n}\n\nfunction movieCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" <img class =\"MoviePoster\" src=\"${poster}\" \n        onerror=\"this.src='https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520'\" \n        alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle dark-mode\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n  const movieCards = document.querySelectorAll('.MovieCard');\n  for (let movieCard of movieCards) {\n    movieCard.addEventListener('click', function () {\n      movieId = this.id;\n      // console.log('ID: ' + movieId);\n    });\n  }\n  // movieCards.forEach(el => el.addEventListener('click', toggleHidden));\n  // movieCards.forEach(el => el.addEventListener('click', e => activeFetch(e)));\n}\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());\n","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres, createCards } from './fetch-functions';\n\nexport function presentMovies(page) {\n  getGenres().then(item => {\n    const genres = item;\n    //edit hubert paginacja\n    document.querySelector('.Gallery').innerHTML = '';\n    //edit hubert paginacja\n    fetchPopularMovies(page).then(result => {\n      const popular = result.data.results;\n\n      createCards(popular, genres);\n    });\n  });\n}\n","import { Loading } from \"notiflix\";\n\nexport default function loader() {\n    // const color = getComputedStyle(document.documentElement).getPropertyValue(`$ic-accent`);\n    Loading.circle('Loading ...', {svgColor: '#ff6b08'});\n}","function namesGenres(ids, map) {\n  let result = [];\n  // (ids || []).forEach(id => {\n  ids.forEach(id => {\n    let genre = map.find(item => item.id === id).name;\n    // console.log('find:', genre);\n    if (genre !== undefined) {\n      result.push(genre);\n    }\n  });\n  // console.log('result:', result);\n  return result;\n}\n\nexport { namesGenres };\n"],"names":["$bpxeT","parcelRequire","$633f7577846d9a47$export$2639bb43b9135e64","page","$3803c7cc153b9ece$export$c5604fa8028da00","then","item","genres","document","querySelector","innerHTML","$3803c7cc153b9ece$export$225b489b0d997c20","result","$3803c7cc153b9ece$export$659b6b545718ce73","data","results","$6JpON","$54ed680c43bc249f$export$2e2bcd8739ae039","Loading","circle","svgColor","$3803c7cc153b9ece$var$gallery","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$var$inputMovie","$3803c7cc153b9ece$var$alert","$3803c7cc153b9ece$var$nextButton","getElementById","$3803c7cc153b9ece$var$prevButton","$3803c7cc153b9ece$var$paginationNumbers","$3803c7cc153b9ece$var$currentPage","$3803c7cc153b9ece$var$disableButton","button","classList","add","setAttribute","$3803c7cc153b9ece$var$enableButton","remove","removeAttribute","$3803c7cc153b9ece$var$handlePageButtonsStatus","pageCount","$3803c7cc153b9ece$var$handleActivePageNumber","querySelectorAll","forEach","Number","textContent","$3803c7cc153b9ece$var$getDots","insertAdjacentHTML","$3803c7cc153b9ece$var$getNumbers","number","isActive","concat","$3803c7cc153b9ece$var$getPagination","i","i1","i2","i3","window","addEventListener","event","preventDefault","target","contains","pageIndex","value","console","log","$3803c7cc153b9ece$export$5a3232bc12c1888e","$3803c7cc153b9ece$var$title","$parcel$interopDefault","$2TvXO","mark","_callee","response1","$dIxxU","default","get","params","api_key","response","totalPages","total_pages","catch","error","_ctx","sent","e","key","$l1Gdk","location","reload","trim","input","response2","query","total_results","Math","ceil","$3803c7cc153b9ece$var$galleryOfMovies","length","Notify","success","searched","response3","movie1","map","movie","ids","genresName","poster","poster_path","id","title","splice","join","release_date","slice","movieCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","movieId","this","err","return","$3803c7cc153b9ece$var$movieCard","genre_ids","genre","find","name","push"],"version":3,"file":"index.916667be.js.map"}