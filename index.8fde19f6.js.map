{"mappings":"YAAA,IAAMA,EAAoBC,SAASC,eAAe,sBAE5CC,EADgBF,SAASC,eAAe,kBACdE,iBAAiB,MAC3CC,EAAaJ,SAASC,eAAe,eACrCI,EAAaL,SAASC,eAAe,eAGrCK,EAAYC,KAAKC,KAAKN,EAAUO,OADd,GAEpBC,EAAc,EA+BlB,IAaMC,EAAiB,SAAAC,GACrBF,EAAcE,EAbdZ,SAASG,iBAAiB,mBAAmBU,SAAQ,SAAAC,GACnDA,EAAOC,UAAUC,OAAO,0BAENC,OAAOH,EAAOI,aAAa,gBAC5BR,GACfI,EAAOC,UAAUI,IAAI,yB,IAUzBC,IAEA,IAAMC,EAnDgB,GAmDHT,EAAU,GACvBU,EApDgB,EAoDJV,EAClBV,EAAUW,SAAQ,SAACU,EAAMC,GACvBD,EAAKR,UAAUI,IAAI,UACfK,GAASH,GAAaG,EAAQF,GAChCC,EAAKR,UAAUC,OAAO,S,KAc5BS,OAAOC,iBAAiB,QAAQ,YA5ChC,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAWqB,IATRH,EAULG,EATbC,YAAa5B,SAAS6B,cAAc,WAC/BC,UAAY,iBACvBF,EAAWG,UAAYP,EACvBI,EAAWI,aAAa,aAAcR,GACtCI,EAAWI,aAAa,aAAc,QAAUR,GAChDzB,EAAkBkC,YAAYL,GANhC,IAA0BJ,EAClBI,C,CAoDNM,GACAvB,EAAe,GAEfN,EAAWqB,iBAAiB,SAAS,WACnCf,EAAeD,EAAc,E,IAE/BN,EAAWsB,iBAAiB,SAAS,WACnCf,EAAeD,EAAc,E,IAG/BV,SAASG,iBAAiB,mBAAmBU,SAAQ,SAAAC,GACnD,IAAMqB,EAAYlB,OAAOH,EAAOI,aAAa,eACzCiB,GACFrB,EAAOY,iBAAiB,SAAS,WAC/Bf,EAAewB,E,UAOvB,IAAMC,EAAgB,SAAAtB,GACpBA,EAAOC,UAAUI,IAAI,YACrBL,EAAOkB,aAAa,YAAY,E,EAE5BK,EAAe,SAAAvB,GACnBA,EAAOC,UAAUC,OAAO,YACxBF,EAAOwB,gBAAgB,W,EAEnBlB,EAA0B,WACV,IAAhBV,EACF0B,EAAc/B,GAEdgC,EAAahC,GAEXC,IAAcI,EAChB0B,EAAchC,GAEdiC,EAAajC,E","sources":["src/models/pagination.js"],"sourcesContent":["const paginationNumbers = document.getElementById('Pagination-Numbers');\nconst paginatedList = document.getElementById('Paginated-List');\nconst listItems = paginatedList.querySelectorAll('li');\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\n\nconst paginationLimit = 3;\nconst pageCount = Math.ceil(listItems.length / paginationLimit);\nlet currentPage = 1;\n//how many items we want displayed on each page\n// const paginationLimit = 20;\n\n// const pageCount = 10;\n//   how many pages there will be based on the paginationLimit\n//   const pageCount = Math.ceil(listItems.length / paginationLimit);\n// const pageCount = totalPages;\n// const totalPages = 10;\n\n//  store the value of the currentPage\n\n// const totalPagesArr = Array.from(Array(totalPages).keys());\n// console.log('ðŸš€ ~ totalPagesArr', totalPagesArr);\n\n//ADD PAGE NUMBERS FUNCTION\nfunction appendPageNumber(index) {\n  const pageNumber = document.createElement('button');\n  pageNumber.className = 'Pagination-Btn';\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute('page-index', index);\n  pageNumber.setAttribute('aria-label', 'Page ' + index);\n  paginationNumbers.appendChild(pageNumber);\n}\nfunction getPaginationNumbers() {\n  for (let i = 1; i <= pageCount; i++) {\n    appendPageNumber(i);\n  }\n}\n\n//set active page number\nconst handleActivePageNumber = () => {\n  document.querySelectorAll('.Pagination-Btn').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex == currentPage) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n\n// DISPLAY ACTIVE PAGE\n//RANGE FOR ITEMS TO BE SHOWN\nconst setCurrentPage = pageNum => {\n  currentPage = pageNum;\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n\n  const prevRange = (pageNum - 1) * paginationLimit;\n  const currRange = pageNum * paginationLimit;\n  listItems.forEach((item, index) => {\n    item.classList.add('hidden');\n    if (index >= prevRange && index < currRange) {\n      item.classList.remove('hidden');\n    }\n  });\n  // totalPagesArr.forEach((item, index) => {\n  //   elementContainer.innerHTML = '';\n  //   if (index >= prevRange && index < currRange) {\n  //     elementContainer.appendChild(item);\n  //   }\n  // });\n};\n\n//set the current page as page 1 once the webpage loads\n//add page number buttons event listners\n\nwindow.addEventListener('load', () => {\n  getPaginationNumbers();\n  setCurrentPage(1);\n\n  prevButton.addEventListener('click', () => {\n    setCurrentPage(currentPage - 1);\n  });\n  nextButton.addEventListener('click', () => {\n    setCurrentPage(currentPage + 1);\n  });\n\n  document.querySelectorAll('.Pagination-Btn').forEach(button => {\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex) {\n      button.addEventListener('click', () => {\n        setCurrentPage(pageIndex);\n      });\n    }\n  });\n});\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n"],"names":["$d1217f7aa58748ec$var$paginationNumbers","document","getElementById","$d1217f7aa58748ec$var$listItems","querySelectorAll","$d1217f7aa58748ec$var$nextButton","$d1217f7aa58748ec$var$prevButton","$d1217f7aa58748ec$var$pageCount","Math","ceil","length","$d1217f7aa58748ec$var$currentPage","$d1217f7aa58748ec$var$setCurrentPage","pageNum","forEach","button","classList","remove","Number","getAttribute","add","$d1217f7aa58748ec$var$handlePageButtonsStatus","prevRange","currRange","item","index","window","addEventListener","i","pageNumber","createElement","className","innerHTML","setAttribute","appendChild","$d1217f7aa58748ec$var$getPaginationNumbers","pageIndex","$d1217f7aa58748ec$var$disableButton","$d1217f7aa58748ec$var$enableButton","removeAttribute"],"version":3,"file":"index.8fde19f6.js.map"}