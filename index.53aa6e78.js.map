{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/present-movies.js","src/models/loaderSpinner.js","src/models/genresid-name.js"],"sourcesContent":["/*\nŚCIEŻKA DZIAŁANIA PLIKUÓW JS PRZY POBIERNIU TYTUŁÓW FILMÓW Z API\n1. POPULARNE FILMY\n  - presentMovies() -> getGenres() -> fetchPopularMovies()\n  - createCards() -> namesGenres() -> movieCard() -> html\n2. WYSZUKIWANE FILMY\n  - eventListener() -> fetchSearchedMovies() -> galleryOfMovies()\n  -> getGenres() -> createCards() -> namesGenres() ->\n  -> movieCard() -> html\n\n*/\nimport axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\nimport { namesGenres } from './genresid-name';\nimport loader from './loaderSpinner';\nimport { Loading, Notify } from 'notiflix';\n\nconst gallery = document.querySelector('.Gallery');\nconst DEBOUNCE_DELAY = 1000;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst inputMovie = document.querySelector('.SearchInput');\nconst alert = document.querySelector('[data-header=\"alert\"]');\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\n\nconst paginationNumbers = document.getElementById('Pagination-Numbers');\n\nlet currentPage = 1;\nlet pageEnd = 100;\n// let page = 1;\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n// disable pagination on My Library\nconst myLibrary = document.querySelector('.NavPageMyLibrary');\nconst paginationContainer = document.querySelector('.Pagination-Container');\nmyLibrary.addEventListener('click', () => {\n  paginationContainer.classList.add('hidden');\n});\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\n\nconst handlePageButtonsStatus = (page, pageCount) => {\n  if (page === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (page === pageCount) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\n//set active page number\nconst handleActivePageNumber = page => {\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n  });\n\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    const pageIndex = Number(button.textContent);\n    if (pageIndex == page) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n// hubert's set active page number\n// const updateActivePage = () => {\n//   const buttons = document.querySelectorAll('.Pagination-Numbers .Nr-Button');\n//   buttons.forEach(button => {\n//     const pageNumber = parseInt(button.innerHTML);\n//     if (pageNumber === currentPage) {\n//       button.classList.add('active');\n//     } else {\n//       button.classList.remove('active');\n//     }\n//   });\n// };\n\nconst getDots = () => {\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Pagination-Btn__Dots\" id=\"Nr-Button\">\n      ...\n      </button>\n    `\n  );\n};\n\nconst getNumbers = number => {\n  const isActive = number === currentPage ? 'Pagination-Btn--Active' : '';\n\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Nr-Button ${isActive}\" id=\"Nr-Button\" >\n      ${number}\n      </button>\n    `\n  );\n};\n\n//GENERATE NUMBERS IN DIV MAIN\nconst getPagination = (page, pageCount) => {\n  paginationNumbers.innerHTML = '';\n  if (pageCount >= 9) {\n    if (page <= 5) {\n      for (let i = 1; i <= 7; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    } else if (page >= pageCount - 5) {\n      getNumbers(1);\n      getDots();\n      for (let i = pageCount - 6; i <= pageCount; i++) {\n        getNumbers(i);\n      }\n    } else {\n      getNumbers(1);\n      getDots();\n      for (let i = page - 2; i <= page + 2; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    }\n  } else if (pageCount < 9) {\n    for (let i = 1; i <= pageCount; i++) {\n      getNumbers(i);\n    }\n  }\n};\n\nwindow.addEventListener('load', () => {\n  handlePageButtonsStatus(1);\n  getPagination(1, pageEnd);\n  handleActivePageNumber(currentPage);\n\n  nextButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage++;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  });\n\n  prevButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage--;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n    window.scrollTo({ top: 0, behavior: 'smooth' });\n  });\n\n  paginationNumbers.addEventListener('click', event => {\n    if (event.target.classList.contains('Nr-Button')) {\n      const pageIndex = Number(event.target.textContent);\n      if (pageIndex !== currentPage) {\n        currentPage = pageIndex;\n        if (inputMovie.value !== '') {\n          console.log('inputxxx');\n          fetchSearchedMovies(title, currentPage);\n        } else {\n          presentMovies(currentPage);\n          handlePageButtonsStatus(currentPage);\n          getPagination(currentPage);\n          handleActivePageNumber(currentPage);\n          window.scrollTo({ top: 0, behavior: 'smooth' });\n        }\n      }\n    }\n  });\n});\n\n// FUNCTION AUTOMATICALLY FETCHING MOST POPULAR MOVIES\nexport const fetchPopularMovies = async page => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n  loader();\n  // Loading.add();\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(function (response) {\n      // RENDER PAGINATION WITH TOTAL RESPONSES / 10\n      const totalPages = response.data.total_pages / 10;\n      getPagination(currentPage, totalPages);\n      handlePageButtonsStatus(currentPage, totalPages);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  Loading.remove(500);\n  return response;\n};\n\n// OFF ENTER KEY\ninputMovie.addEventListener('keypress', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n  }\n});\n\nlet title = '';\n\n//EVENT LISTENING TO SEARCHBAR INPUT\ninputMovie.addEventListener(\n  'input',\n  debounce(async event => {\n    event.preventDefault();\n    if (inputMovie.value == '') {\n      return location.reload();\n    } else {\n      title = event.target.value.trim();\n      console.log('title', title);\n      currentPage = 1;\n      fetchSearchedMovies(title);\n      return title;\n    }\n  }, DEBOUNCE_DELAY)\n);\n\n// FUNCTION FETCHIN MOVIES BY QUERY\n// deleted from argument pageNumber\nexport const fetchSearchedMovies = async (input, page) => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n  loader();\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        page: page,\n      },\n    })\n    .then(response => {\n      if (currentPage === 1) {\n        Notify.success(`We found ${response.data.total_results} movies!`);\n      }\n      // loader();\n      let pageCount = 0;\n      if (response.data.total_results % 20 === 0) {\n        pageCount = response.data.total_results / 20;\n      } else {\n        pageCount = Math.ceil(response.data.total_results / 20);\n      }\n      galleryOfMovies(response);\n      getPagination(currentPage, pageCount);\n      handlePageButtonsStatus(currentPage, pageCount);\n\n      \n      // console.log(\"wynij\", response.data.total_results);\n      alert.classList.add('hidden');\n      if (response.data.results.length === 0) {\n        alert.classList.remove('hidden');\n      }\n      // Loading.remove();\n\n      return response;\n    })\n    .catch(() => {\n      console.log('error');\n    });\n  Loading.remove(500);\n  Notify.info(`We found ${response.data.total_results} movies!`);\n\n  return response;\n};\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched, genres);\n  });\n}\n\n// FUNCTION GETTING GENRES FROM MOVIES\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport function createCards(movie, genres) {\n  // console.log('wynik;', movie, genres);\n  // console.log('test movie:', movie[0].genre_ids);\n  // console.log('test genre:', genres[0]);\n\n  movie.map(movie => {\n    const genresName = namesGenres(movie.genre_ids, genres);\n    movieCard(movie, genresName);\n  });\n}\n\nfunction movieCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" <img class =\"MoviePoster\" src=\"${poster}\" \n        onerror=\"this.src='https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520'\" \n        alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle dark-mode\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n  const movieCards = document.querySelectorAll('.MovieCard');\n  for (let movieCard of movieCards) {\n    movieCard.addEventListener('click', function () {\n      movieId = this.id;\n      // console.log('ID: ' + movieId);\n    });\n  }\n  // movieCards.forEach(el => el.addEventListener('click', toggleHidden));\n  // movieCards.forEach(el => el.addEventListener('click', e => activeFetch(e)));\n}\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());\n","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres, createCards } from './fetch-functions';\n\nexport function presentMovies(page) {\n  getGenres().then(item => {\n    const genres = item;\n    //edit hubert paginacja\n    document.querySelector('.Gallery').innerHTML = '';\n    //edit hubert paginacja\n    fetchPopularMovies(page).then(result => {\n      const popular = result.data.results;\n\n      createCards(popular, genres);\n    });\n  });\n}\n","import { Loading } from \"notiflix\";\n\nexport default function loader() {\n    // const color = getComputedStyle(document.documentElement).getPropertyValue(`$ic-accent`);\n    Loading.circle('Loading ...', {svgColor: '#ff6b08'});\n}","function namesGenres(ids, map) {\n  let result = [];\n  // (ids || []).forEach(id => {\n  ids.forEach(id => {\n    let genre = map.find(item => item.id === id).name;\n    // console.log('find:', genre);\n    if (genre !== undefined) {\n      result.push(genre);\n    }\n  });\n  // console.log('result:', result);\n  return result;\n}\n\nexport { namesGenres };\n"],"names":["$bpxeT","parcelRequire","$633f7577846d9a47$export$2639bb43b9135e64","page","$3803c7cc153b9ece$export$c5604fa8028da00","then","item","genres","document","querySelector","innerHTML","$3803c7cc153b9ece$export$225b489b0d997c20","result","$3803c7cc153b9ece$export$659b6b545718ce73","data","results","$6JpON","$54ed680c43bc249f$export$2e2bcd8739ae039","Loading","circle","svgColor","$3803c7cc153b9ece$var$gallery","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$var$inputMovie","$3803c7cc153b9ece$var$alert","$3803c7cc153b9ece$var$nextButton","getElementById","$3803c7cc153b9ece$var$prevButton","$3803c7cc153b9ece$var$paginationNumbers","$3803c7cc153b9ece$var$currentPage","$3803c7cc153b9ece$var$myLibrary","$3803c7cc153b9ece$var$paginationContainer","addEventListener","classList","add","$3803c7cc153b9ece$var$disableButton","button","setAttribute","$3803c7cc153b9ece$var$enableButton","remove","removeAttribute","$3803c7cc153b9ece$var$handlePageButtonsStatus","pageCount","$3803c7cc153b9ece$var$handleActivePageNumber","querySelectorAll","forEach","Number","textContent","$3803c7cc153b9ece$var$getDots","insertAdjacentHTML","$3803c7cc153b9ece$var$getNumbers","number","isActive","concat","$3803c7cc153b9ece$var$getPagination","i","i1","i2","i3","window","event","preventDefault","scrollTo","top","behavior","target","contains","pageIndex","value","console","log","$3803c7cc153b9ece$export$5a3232bc12c1888e","$3803c7cc153b9ece$var$title","$parcel$interopDefault","$2TvXO","mark","_callee","response1","$dIxxU","default","get","params","api_key","response","totalPages","total_pages","catch","error","_ctx","sent","e","key","$l1Gdk","location","reload","trim","input","response2","query","Notify","success","total_results","Math","ceil","$3803c7cc153b9ece$var$galleryOfMovies","length","info","searched","response3","movie1","map","movie","ids","genresName","poster","poster_path","id","title","splice","join","release_date","slice","movieCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","movieId","this","err","return","$3803c7cc153b9ece$var$movieCard","genre_ids","genre","find","name","push"],"version":3,"file":"index.53aa6e78.js.map"}