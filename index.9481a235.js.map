{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,0BCAMC,EAAUC,SAASC,cAAc,YCGhBD,SAASC,cAAc,YFA9C,I,EAAMC,EAAU,mCAIZC,EAAQH,SAASC,cAAc,iBAuBtBG,G,EArBsBC,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,I,IAC3BC,EAEAC,E,yEAFAD,EAAoB,qDAAsEE,OAAjBT,EAAQ,WAAeS,OAANR,EAAM,W,SAE/ES,EAAAC,QACtBC,IAAIL,GACJM,MAAK,SAAUC,GAMd,OAAOA,C,IAERC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,E,kBAXRR,EAAQW,EAAAC,K,kBAcTZ,G,2CAIwB,W,MAAGL,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,I,IAC1Be,EAEAC,E,yEAFAD,EAAmB,2DAAmEZ,OAART,EAAQ,W,SAErEU,EAAAC,QACpBC,IAAIS,GACJR,MAAK,SAAUC,GACd,OAAOA,C,IAERC,OAAM,SAAUC,GACfC,QAAQC,IAAIF,E,kBANVM,EAAQH,EAAAC,K,kBASPE,G,6FAZsB,IAelBC,EAAS,W,MAAGpB,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,I,IACjBkB,EAEAC,E,yEAFAD,EAAY,yDAAiEf,OAART,G,SAEpDU,EAAAC,QACpBC,IAAIY,GACJX,MAAK,SAAUC,GACd,OAAOA,EAASY,KAAKC,M,IAEtBZ,OAAM,SAAUC,GACfC,QAAQC,IAAIF,E,kBANVS,EAAQN,EAAAC,K,kBASPK,G,6FAZa,IAeC,W,MAAGtB,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAAMsB,G,IACxBC,EAEAC,E,yEAFAD,EAAU,sCAA0DpB,OAApBmB,EAAS,aAAmBnB,OAART,EAAQ,mB,SAE3DU,EAAAC,QACpBC,IAAIiB,GACJhB,MAAK,SAAUC,GAEd,OADAG,QAAQC,IAAIJ,EAASY,MACdZ,EAASY,I,IAEjBX,OAAM,SAAUC,GACfC,QAAQC,IAAIF,E,kBAPVc,EAAQX,EAAAC,K,kBAUPU,G,4CAbc,GAgBPhC,SAASC,cAAc,YAEvCD,SAASiC,iBAAiB,wBEvExBR,IAAYV,MAAK,SAAAmB,GACf,IAAML,EAASK,EACff,QAAQC,IAAIS,GAEZzB,IAAqBW,MAAK,SAAAoB,GACtB,IAAMC,EAAUD,EAAOP,KAAKS,QAC5BlB,QAAQC,IAAIe,EAAOP,KAAKS,SAK9B,SAAqBC,EAAQT,GAC3BS,EAAOC,KAAI,SAAAC,GACX,IAAMC,EAKR,SAAsBD,EAAOX,GACzB,OAAOA,EAAOa,QAAO,SAACC,EAAaT,GAIjC,OAHIM,EAAMI,UAAUC,SAASX,EAAKY,KAChCH,EAAYI,KAAKb,EAAKc,MAEjBL,C,GACN,G,CAXcM,CAAaT,EAAOX,IDlBpC,SAAqBW,EAAOC,GACjC,IAAIS,EAAS,kCAAoDvC,OAAlB6B,EAAMW,aACrDpD,EAAQqD,mBACN,YACA,gCACgBzC,OADgB6B,EAAMM,GAAG,0BACTnC,OAAhBuC,EAAO,WAGmBvC,OAHV6B,EAAMa,MAAM,sJAKnC1C,OAFiC6B,EAAMa,MAAM,oCAE7B1C,OAAhB8B,EAAW,OAAmC9B,OAA9B6B,EAAMc,aAAaC,MAAM,EAAE,GAAG,kD,CCSvD,CAAYf,EAAOC,E,IAPfe,CAAYpB,EAASP,E","sources":["src/models/fetch-functions.js","src/models/create-movie-card.js","src/models/present-movies.js"],"sourcesContent":["import axios from 'axios';\nimport { presentMovies } from \"./present-movies\";\n\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nlet input = document.querySelector('.search-input');\n\nexport const fetchSearchedMovies = async () => {\n  const urlSearchedMovies = `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${input}&page=1`;\n\n  const response = await axios\n  .get(urlSearchedMovies)\n  .then(function (response) {\n    // getGenres().then(item => {\n    //   const genres = item;\n    //   createCards(response.data.results, genres);\n    // })\n    // pagination function\n    return response;\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n\nreturn response;\n};\n\n\nexport const fetchPopularMovies = async () => {\n  const urlPopularMovies = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}&page=1`;\n\n  const response = await axios\n    .get(urlPopularMovies)\n    .then(function (response) {\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport const getGenres = async () => {\n  const urlGenres = `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n \n  const response = await axios\n    .get(urlGenres)\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport const getDetails = async movie_id => {\n  const urlInfo = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios\n    .get(urlInfo)\n    .then(function (response) {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nconst gallery = document.querySelector('.gallery');\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());","const gallery = document.querySelector('.gallery');\n\nexport function galleryCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"movie-card\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"movie-card__info\">\n          <p class=\"movie-card__data\">\n            <span class=\"movie-card__title\">${movie.title}\n          </span>\n           ${genresName} | ${movie.release_date.slice(0,4)}\n          </p>\n        </div>\n      </div>`\n  );\n}","import { fetchPopularMovies } from \"./fetch-functions\";\nimport { getGenres } from \"./fetch-functions\";\nimport { galleryCard } from \"./create-movie-card\";\nexport const gallery = document.querySelector('.gallery');\n\nexport function presentMovies(){\n\n  getGenres().then(item => {\n    const genres = item;\n    console.log(genres);\n  \n    fetchPopularMovies().then(result => {\n        const popular = result.data.results;\n        console.log(result.data.results);\n        createCards(popular, genres);\n    });\n  });\n  \n  function createCards(movies, genres){\n    movies.map(movie => {\n    const genresName = nameOfGenres(movie, genres);\n    galleryCard(movie, genresName);\n    });\n  }\n  \n  function nameOfGenres(movie, genres) {\n      return genres.reduce((accumulator, item) => {\n        if (movie.genre_ids.includes(item.id)) {\n          accumulator.push(item.name);\n        }\n        return accumulator;\n      }, []);\n    }\n}"],"names":["$bpxeT","parcelRequire","$abc419e3f32cbc6e$var$gallery","document","querySelector","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$var$input","$3803c7cc153b9ece$export$225b489b0d997c20","$parcel$interopDefault","$2TvXO","mark","_callee","urlSearchedMovies","response1","concat","$dIxxU","default","get","then","response","catch","error","console","log","_ctx","sent","urlPopularMovies","response2","$3803c7cc153b9ece$export$c5604fa8028da00","urlGenres","response3","data","genres","movie_id","urlInfo","response4","addEventListener","item","result","popular","results","movies","map","movie","genresName","reduce","accumulator","genre_ids","includes","id","push","name","nameOfGenres","poster","poster_path","insertAdjacentHTML","title","release_date","slice","createCards"],"version":3,"file":"index.9481a235.js.map"}