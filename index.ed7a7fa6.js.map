{"mappings":"AAAA,MAAMA,EAAoBC,SAASC,eAAe,sBAE5CC,EADgBF,SAASC,eAAe,kBACdE,iBAAiB,MAC3CC,EAAaJ,SAASC,eAAe,eACrCI,EAAaL,SAASC,eAAe,eAGrCK,EAAYC,KAAKC,KAAKN,EAAUO,OADd,GAExB,IAAIC,EAAc,EAgBlB,SAASC,EAAiBC,GACxB,MAAMC,EAAab,SAASc,cAAc,UAC1CD,EAAWE,UAAY,iBACvBF,EAAWG,UAAYJ,EACvBC,EAAWI,aAAa,aAAcL,GACtCC,EAAWI,aAAa,aAAc,QAAUL,GAChDb,EAAkBmB,YAAYL,E,CAShC,MAaMM,EAAiBC,IACrBV,EAAcU,EAbdpB,SAASG,iBAAiB,mBAAmBkB,SAAQC,IACnDA,EAAOC,UAAUC,OAAO,0BAENC,OAAOH,EAAOI,aAAa,gBAC5BhB,GACfY,EAAOC,UAAUI,IAAI,yBAAyB,IAUlDC,IAEA,MAAMC,EAnDgB,GAmDHT,EAAU,GACvBU,EApDgB,EAoDJV,EAClBlB,EAAUmB,SAAQ,CAACU,EAAMnB,KACvBmB,EAAKR,UAAUI,IAAI,UACff,GAASiB,GAAajB,EAAQkB,GAChCC,EAAKR,UAAUC,OAAO,SAAS,GAEjC,EAYJQ,OAAOC,iBAAiB,QAAQ,MA5ChC,WACE,IAAK,IAAIC,EAAI,EAAGA,GAAK5B,EAAW4B,IAC9BvB,EAAiBuB,E,CA2CnBC,GACAhB,EAAe,GAEfd,EAAW4B,iBAAiB,SAAS,KACnCd,EAAeT,EAAc,EAAE,IAEjCN,EAAW6B,iBAAiB,SAAS,KACnCd,EAAeT,EAAc,EAAE,IAGjCV,SAASG,iBAAiB,mBAAmBkB,SAAQC,IACnD,MAAMc,EAAYX,OAAOH,EAAOI,aAAa,eACzCU,GACFd,EAAOW,iBAAiB,SAAS,KAC/Bd,EAAeiB,EAAU,GACzB,GAEJ,IAIJ,MAAMC,EAAgBf,IACpBA,EAAOC,UAAUI,IAAI,YACrBL,EAAOL,aAAa,YAAY,EAAK,EAEjCqB,EAAehB,IACnBA,EAAOC,UAAUC,OAAO,YACxBF,EAAOiB,gBAAgB,WAAW,EAE9BX,EAA0B,KACV,IAAhBlB,EACF2B,EAAchC,GAEdiC,EAAajC,GAEXC,IAAcI,EAChB2B,EAAcjC,GAEdkC,EAAalC,EAAW","sources":["src/models/pagination.js"],"sourcesContent":["const paginationNumbers = document.getElementById('Pagination-Numbers');\nconst paginatedList = document.getElementById('Paginated-List');\nconst listItems = paginatedList.querySelectorAll('li');\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\n\nconst paginationLimit = 3;\nconst pageCount = Math.ceil(listItems.length / paginationLimit);\nlet currentPage = 1;\n//how many items we want displayed on each page\n// const paginationLimit = 20;\n\n// const pageCount = 10;\n//   how many pages there will be based on the paginationLimit\n//   const pageCount = Math.ceil(listItems.length / paginationLimit);\n// const pageCount = totalPages;\n// const totalPages = 10;\n\n//  store the value of the currentPage\n\n// const totalPagesArr = Array.from(Array(totalPages).keys());\n// console.log('ðŸš€ ~ totalPagesArr', totalPagesArr);\n\n//ADD PAGE NUMBERS FUNCTION\nfunction appendPageNumber(index) {\n  const pageNumber = document.createElement('button');\n  pageNumber.className = 'Pagination-Btn';\n  pageNumber.innerHTML = index;\n  pageNumber.setAttribute('page-index', index);\n  pageNumber.setAttribute('aria-label', 'Page ' + index);\n  paginationNumbers.appendChild(pageNumber);\n}\nfunction getPaginationNumbers() {\n  for (let i = 1; i <= pageCount; i++) {\n    appendPageNumber(i);\n  }\n}\n\n//set active page number\nconst handleActivePageNumber = () => {\n  document.querySelectorAll('.Pagination-Btn').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex == currentPage) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n\n// DISPLAY ACTIVE PAGE\n//RANGE FOR ITEMS TO BE SHOWN\nconst setCurrentPage = pageNum => {\n  currentPage = pageNum;\n  handleActivePageNumber();\n  handlePageButtonsStatus();\n\n  const prevRange = (pageNum - 1) * paginationLimit;\n  const currRange = pageNum * paginationLimit;\n  listItems.forEach((item, index) => {\n    item.classList.add('hidden');\n    if (index >= prevRange && index < currRange) {\n      item.classList.remove('hidden');\n    }\n  });\n  // totalPagesArr.forEach((item, index) => {\n  //   elementContainer.innerHTML = '';\n  //   if (index >= prevRange && index < currRange) {\n  //     elementContainer.appendChild(item);\n  //   }\n  // });\n};\n\n//set the current page as page 1 once the webpage loads\n//add page number buttons event listners\n\nwindow.addEventListener('load', () => {\n  getPaginationNumbers();\n  setCurrentPage(1);\n\n  prevButton.addEventListener('click', () => {\n    setCurrentPage(currentPage - 1);\n  });\n  nextButton.addEventListener('click', () => {\n    setCurrentPage(currentPage + 1);\n  });\n\n  document.querySelectorAll('.Pagination-Btn').forEach(button => {\n    const pageIndex = Number(button.getAttribute('page-index'));\n    if (pageIndex) {\n      button.addEventListener('click', () => {\n        setCurrentPage(pageIndex);\n      });\n    }\n  });\n});\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\nconst handlePageButtonsStatus = () => {\n  if (currentPage === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (pageCount === currentPage) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n"],"names":["$7312cd9ff03e6bf3$var$paginationNumbers","document","getElementById","$7312cd9ff03e6bf3$var$listItems","querySelectorAll","$7312cd9ff03e6bf3$var$nextButton","$7312cd9ff03e6bf3$var$prevButton","$7312cd9ff03e6bf3$var$pageCount","Math","ceil","length","$7312cd9ff03e6bf3$var$currentPage","$7312cd9ff03e6bf3$var$appendPageNumber","index","pageNumber","createElement","className","innerHTML","setAttribute","appendChild","$7312cd9ff03e6bf3$var$setCurrentPage","pageNum","forEach","button","classList","remove","Number","getAttribute","add","$7312cd9ff03e6bf3$var$handlePageButtonsStatus","prevRange","currRange","item","window","addEventListener","i","$7312cd9ff03e6bf3$var$getPaginationNumbers","pageIndex","$7312cd9ff03e6bf3$var$disableButton","$7312cd9ff03e6bf3$var$enableButton","removeAttribute"],"version":3,"file":"index.ed7a7fa6.js.map"}