{"mappings":"oeAAAA,EAAA,a,aAGA,MAAMC,EAAgBC,SAASC,cAAc,4BACvCC,EAAcF,SAASC,cAAc,0BAErCE,EAAoBC,MAAMC,IAC9BA,EAAEC,iBACFC,EAAAC,QAAQC,UAAY,GAEpB,MACMC,EADMH,EAAAI,SACcC,KAAIC,GAC5BC,MACE,sCAAsCD,aAAcE,sBAI9B,KAAtBR,EAAAC,QAAQC,YAAkBF,EAAAC,QAAQC,UAAY,IAElDO,QAAQC,IAAIP,GACTQ,MAAKC,GAAaH,QAAQC,IAAIE,EAAUP,KAAIQ,GAAYA,EAASC,YACjEH,MAAKI,IACJA,EAAKC,SAAQC,GAAQC,EAAgBD,IAAM,IAE5CE,OAAMC,GAASC,QAAQC,IAAIF,IAAO,EAGjCG,EAAsB1B,MAAMC,IAChCA,EAAEC,iBACFC,EAAAC,QAAQC,UAAY,GAEpB,MACMC,EADMH,EAAAwB,WACcnB,KAAIC,GAC5BC,MACE,sCAAsCD,aAAcE,sBAI9B,KAAtBR,EAAAC,QAAQC,YAAkBF,EAAAC,QAAQC,UAAY,IAElDO,QAAQC,IAAIP,GACTQ,MAAKC,GAAaH,QAAQC,IAAIE,EAAUP,KAAIQ,GAAYA,EAASC,YACjEH,MAAKI,IACJA,EAAKC,SAAQC,GAAQC,EAAgBD,IAAM,IAE5CE,OAAMC,GAASC,QAAQC,IAAIF,IAAO,EAGjCZ,EAAS,mCAiBf,SAASU,EAAgBO,GACvB,MAAMC,EAAaD,EAAME,OAAOtB,KAAIuB,GAASA,EAAMC,OACnD,IAAIC,EAAS,kCAAkCL,EAAMM,cAE3B,OAAtBN,EAAMM,cACRD,EACE,4GAGJ9B,EAAAC,QAAQ+B,mBACN,YACA,+BAA+BP,EAAMnB,2BACrBwB,WAAgBL,EAAMQ,gJAGCR,EAAMQ,4BACpCP,EAAWQ,OAAO,EAAG,GAAGC,KAAK,WAAWV,EAAMW,aAAaC,MAClE,EACA,mD,CAQFC,OAAOC,SAASC,KAAKC,SAAS,sBAChCH,OAAOI,iBAAiB,OAAQ9C,GAChCJ,EAAckD,iBAAiB,QAAS9C,GACxCD,EAAY+C,iBAAiB,QAASnB","sources":["src/models/add-movie.js"],"sourcesContent":["import axios from 'axios';\nimport { gallery, addMovie, queueMovie } from './modal-movie';\n\nconst btnWatchedLib = document.querySelector('[data-library=\"watched\"]');\nconst btnQueueLib = document.querySelector('[data-library=\"queue\"]');\n\nconst activeFetchLibAdd = async e => {\n  e.preventDefault();\n  gallery.innerHTML = '';\n\n  const ids = addMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id =>\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    )\n  );\n\n  if (gallery.innerHTML !== '') gallery.innerHTML = '';\n\n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => {\n      data.forEach(item => showAddedMovies(item));\n    })\n    .catch(error => console.log(error));\n};\n\nconst activeFetchLibQueue = async e => {\n  e.preventDefault();\n  gallery.innerHTML = '';\n\n  const ids = queueMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id =>\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`\n    )\n  );\n\n  if (gallery.innerHTML !== '') gallery.innerHTML = '';\n\n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => {\n      data.forEach(item => showAddedMovies(item));\n    })\n    .catch(error => console.log(error));\n};\n\nconst apiKey = '28e7de8a02a020e11a900cecedfaedb8';\n\nasync function fetchItems() {\n  const params = new URLSearchParams({\n    api_key: apiKey,\n  });\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${addMovie.join()}?${params}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log('Error: ', error);\n  }\n}\n\nfunction showAddedMovies(movie) {\n  const genresName = movie.genres.map(genre => genre.name);\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n  if (movie.poster_path === null) {\n    poster =\n      'https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520';\n  }\n  // const poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" />\n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}</span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n}\n\nif (window.location.href.endsWith('/my-library.html')) {\n  window.addEventListener('load', activeFetchLibAdd);\n  btnWatchedLib.addEventListener('click', activeFetchLibAdd);\n  btnQueueLib.addEventListener('click', activeFetchLibQueue);\n}\n"],"names":["parcelRequire","$7118a556a4dc0501$var$btnWatchedLib","document","querySelector","$7118a556a4dc0501$var$btnQueueLib","$7118a556a4dc0501$var$activeFetchLibAdd","async","e","preventDefault","$5P1lj","gallery","innerHTML","fetchRequests","addMovie","map","id","fetch","$7118a556a4dc0501$var$apiKey","Promise","all","then","responses","response","json","data","forEach","item","$7118a556a4dc0501$var$showAddedMovies","catch","error","console","log","$7118a556a4dc0501$var$activeFetchLibQueue","queueMovie","movie","genresName","genres","genre","name","poster","poster_path","insertAdjacentHTML","title","splice","join","release_date","slice","window","location","href","endsWith","addEventListener"],"version":3,"file":"index.8d0175cd.js.map"}