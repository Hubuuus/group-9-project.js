{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/create-movie-card.js","src/models/present-movies.js"],"sourcesContent":["import axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\n\nconst DEBOUNCE_DELAY = 500;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const gallery = document.querySelector('.Gallery');\nconst inputMovie = document.querySelector('.SearchInput');\n\nlet page = 1;\n\ninputMovie.addEventListener('input', debounce( async event => {\n  event.preventDefault();\n\n  // const title = event.target.value.trim();\n  const title = inputMovie.value.trim();\n\n  fetchSearchedMovies(title);\n}, DEBOUNCE_DELAY));\n\nexport const fetchSearchedMovies = async (input, page) => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        page: page,\n      },\n    })\n    .then(response => {\n      galleryOfMovies(response);\n\n      // console.log(response);\n      return response;\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n\n  console.log('Response', response);\n  return response;\n};\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched);\n  });\n\n  function createCards(movie) {\n    movie.map(item => {\n      // const genresName = nameOfGenres(movie, genres);\n      movieCard(item);\n    });\n  }\n\n  // function nameOfGenres(movie, genres) {\n  //   return genres.reduce((accumulator, item) => {\n  //     if (movie.genre_ids.includes(item.id)) {\n  //       accumulator.push(item.name);\n  //     }\n  //     return accumulator;\n  //   }, []);\n  // } \n\n}\n\n\n\nfunction movieCard(movie) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  // let genresName =  nameOfGenres(movie, genres);\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}\n          </span>\n           \"//$//{genresName}\" | ${movie.release_date.slice(0,4)}\n          </p>\n        </div>\n      </div>`\n  );\n}\n\nexport const fetchPopularMovies = async () => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        // page: page,\n      },\n    })\n    .then(function (response) {\n      console.log('response', response);\n      console.log('results', response.data.results);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport const getDetails = async movie_id => {\n  const urlInfo = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n\n  const response = await axios\n    .get(urlInfo)\n    .then(function (response) {\n      console.log(response.data);\n      return response.data;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());","const gallery = document.querySelector('.Gallery');\n\nexport function galleryCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n};","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres } from './fetch-functions';\nimport { galleryCard } from './create-movie-card';\nimport { gallery } from './fetch-functions';\n\nexport function presentMovies() {\n  getGenres().then(item => {\n    const genres = item;\n    // console.log(genres);\n\n    fetchPopularMovies().then(result => {\n      const popular = result.data.results;\n      // console.log(result.data.results);\n      createCards(popular, genres);\n    });\n  });\n\n  function createCards(movies, genres) {\n    movies.map(movie => {\n      const genresName = nameOfGenres(movie, genres);\n      galleryCard(movie, genresName);\n    });\n  }\n\n  function nameOfGenres(movie, genres) {\n    return genres.reduce((accumulator, item) => {\n      if (movie.genre_ids.includes(item.id)) {\n        accumulator.push(item.name);\n      }\n      return accumulator;\n    }, []);\n  }\n}\n\n// document.addEventListener('DOMContentLoaded', presentMovies());\n"],"names":["$bpxeT","parcelRequire","$abc419e3f32cbc6e$var$gallery","document","querySelector","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$export$b21c1b4271bdbe93","$3803c7cc153b9ece$var$inputMovie","addEventListener","$parcel$interopDefault","$l1Gdk","$2TvXO","mark","_callee","event","title","preventDefault","value","trim","$3803c7cc153b9ece$export$5a3232bc12c1888e","input","page1","response1","$dIxxU","default","get","params","api_key","query","page","then","response","$3803c7cc153b9ece$var$galleryOfMovies","catch","error","console","log","_ctx","sent","innerHTML","searched","data","results","$3803c7cc153b9ece$export$c5604fa8028da00","item","map","movie","poster","concat","poster_path","insertAdjacentHTML","id","release_date","slice","$3803c7cc153b9ece$var$movieCard","$3803c7cc153b9ece$export$225b489b0d997c20","response2","response3","genres","movie_id","urlInfo","response4","result","movies","genresName","reduce","accumulator","genre_ids","includes","push","name","nameOfGenres","splice","join","createCards"],"version":3,"file":"index.f805478f.js.map"}