{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/present-movies.js","src/models/genresid-name.js","src/models/loaderSpinner.js"],"sourcesContent":["/*\nŚCIEŻKA DZIAŁANIA PLIKUÓW JS PRZY POBIERNIU TYTUŁÓW FILMÓW Z API\n1. POPULARNE FILMY\n  - presentMovies() -> getGenres() -> fetchPopularMovies()\n  - createCards() -> namesGenres() -> movieCard() -> html\n2. WYSZUKIWANE FILMY\n  - eventListener() -> fetchSearchedMovies() -> galleryOfMovies()\n  -> getGenres() -> createCards() -> namesGenres() ->\n  -> movieCard() -> html\n\n*/\nimport axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\nimport { namesGenres } from './genresid-name';\nimport loader from './loaderSpinner';\nimport { Loading, Notify } from 'notiflix';\n// import { activeFetch, toggleHidden } from './modal-movie';\n\nconst gallery = document.querySelector('.Gallery');\nconst DEBOUNCE_DELAY = 1000;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst inputMovie = document.querySelector('.SearchInput');\nconst alert = document.querySelector('[data-header=\"alert\"]');\n//edit hubert paginacja\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\nlet nrButton = '';\n\nconst paginationNumbers = document.getElementById('Pagination-Numbers');\n\nlet currentPage = 1;\nlet pageEnd = 100;\n// let page = 1;\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\n\nconst handlePageButtonsStatus = (page, pageCount) => {\n  if (page === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (page === pageCount) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\n//set active page number\nconst handleActivePageNumber = page => {\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n  });\n\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    const pageIndex = Number(button.textContent);\n    if (pageIndex == page) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n// hubert's set active page number\n// const updateActivePage = () => {\n//   const buttons = document.querySelectorAll('.Pagination-Numbers .Nr-Button');\n//   buttons.forEach(button => {\n//     const pageNumber = parseInt(button.innerHTML);\n//     if (pageNumber === currentPage) {\n//       button.classList.add('active');\n//     } else {\n//       button.classList.remove('active');\n//     }\n//   });\n// };\n\nconst getDots = () => {\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Pagination-Btn__Dots\" id=\"Nr-Button\">\n      ...\n      </button>\n    `\n  );\n};\n\nconst getNumbers = number => {\n  const isActive = number === currentPage ? 'Pagination-Btn--Active' : '';\n\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Nr-Button ${isActive}\" id=\"Nr-Button\" >\n      ${number}\n      </button>\n    `\n  );\n};\n\n//GENERATE NUMBERS IN DIV MAIN\nconst getPagination = (page, pageCount) => {\n  paginationNumbers.innerHTML = '';\n  if (pageCount >= 9) {\n    if (page <= 5) {\n      for (let i = 1; i <= 7; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    } else if (page >= pageCount - 5) {\n      getNumbers(1);\n      getDots();\n      for (let i = pageCount - 6; i <= pageCount; i++) {\n        getNumbers(i);\n      }\n    } else {\n      getNumbers(1);\n      getDots();\n      for (let i = page - 2; i <= page + 2; i++) {\n        getNumbers(i);\n      }\n      getDots();\n      getNumbers(pageCount);\n    }\n  } else if (pageCount < 9) {\n    for (let i = 1; i <= pageCount; i++) {\n      getNumbers(i);\n    }\n  }\n};\n\nwindow.addEventListener('load', () => {\n  handlePageButtonsStatus(1);\n  getPagination(1, pageEnd);\n  handleActivePageNumber(currentPage);\n\n  nextButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage++;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  prevButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage--;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  paginationNumbers.addEventListener('click', event => {\n    if (event.target.classList.contains('Nr-Button')) {\n      const pageIndex = Number(event.target.textContent);\n      if (pageIndex !== currentPage) {\n        currentPage = pageIndex;\n        if (inputMovie.value !== '') {\n          console.log('inputxxx');\n          fetchSearchedMovies(title, currentPage);\n        } else {\n          presentMovies(currentPage);\n          handlePageButtonsStatus(currentPage);\n          getPagination(currentPage);\n          handleActivePageNumber(currentPage);\n        }\n      }\n    }\n  });\n});\n\n// FUNCTION AUTOMATICALLY FETCHING MOST POPULAR MOVIES\nexport const fetchPopularMovies = async page => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n  loader();\n  // Loading.add();\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(function (response) {\n      // RENDER PAGINATION WITH TOTAL RESPONSES / 10\n      const totalPages = response.data.total_pages / 10;\n      getPagination(currentPage, totalPages);\n      handlePageButtonsStatus(currentPage, totalPages);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n  Loading.remove(500);\n  return response;\n};\n\n// OFF ENTER KEY\ninputMovie.addEventListener('keypress', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n  }\n});\n\nlet title = '';\n\n//EVENT LISTENING TO SEARCHBAR INPUT\ninputMovie.addEventListener(\n  'input',\n  debounce(async event => {\n    event.preventDefault();\n    if (inputMovie.value == '') {\n      return location.reload();\n    } else {\n      title = event.target.value.trim();\n      console.log('title', title);\n      currentPage = 1;\n      fetchSearchedMovies(title);\n      return title;\n    }\n  }, DEBOUNCE_DELAY)\n);\n\n// FUNCTION FETCHIN MOVIES BY QUERY\n// deleted from argument pageNumber\nexport const fetchSearchedMovies = async (input, page) => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n  loader();\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        page: page,\n      },\n    })\n    .then(response => {\n      if (currentPage === 1) {\n        Notify.success(`We found ${response.data.total_results} movies!`);\n      }\n      // loader();\n      let pageCount = 0;\n      if (response.data.total_results % 20 === 0) {\n        pageCount = response.data.total_results / 20;\n      } else {\n        pageCount = Math.ceil(response.data.total_results / 20);\n      }\n      galleryOfMovies(response);\n      getPagination(currentPage, pageCount);\n      handlePageButtonsStatus(currentPage, pageCount);\n\n      \n      // console.log(\"wynij\", response.data.total_results);\n      alert.classList.add('hidden');\n      if (response.data.results.length === 0) {\n        alert.classList.remove('hidden');\n      }\n      // Loading.remove();\n\n      return response;\n    })\n    .catch(() => {\n      console.log('error');\n    });\n  Loading.remove(500);\n  // Notify.success(`We found ${response.data.total_results} movies!`);\n\n  return response;\n};\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched, genres);\n  });\n}\n\n// FUNCTION GETTING GENRES FROM MOVIES\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport function createCards(movie, genres) {\n  // console.log('wynik;', movie, genres);\n  // console.log('test movie:', movie[0].genre_ids);\n  // console.log('test genre:', genres[0]);\n\n  movie.map(movie => {\n    const genresName = namesGenres(movie.genre_ids, genres);\n    movieCard(movie, genresName);\n  });\n}\n\nfunction movieCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" <img class =\"MoviePoster\" src=\"${poster}\" \n        onerror=\"this.src='https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520'\" \n        alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle dark-mode\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n  const movieCards = document.querySelectorAll('.MovieCard');\n  for (let movieCard of movieCards) {\n    movieCard.addEventListener('click', function () {\n      movieId = this.id;\n      // console.log('ID: ' + movieId);\n    });\n  }\n  // movieCards.forEach(el => el.addEventListener('click', toggleHidden));\n  // movieCards.forEach(el => el.addEventListener('click', e => activeFetch(e)));\n}\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());\n","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres, createCards } from './fetch-functions';\n\nexport function presentMovies(page) {\n  getGenres().then(item => {\n    const genres = item;\n    //edit hubert paginacja\n    document.querySelector('.Gallery').innerHTML = '';\n    //edit hubert paginacja\n    fetchPopularMovies(page).then(result => {\n      const popular = result.data.results;\n\n      createCards(popular, genres);\n    });\n  });\n}\n","function namesGenres(ids, map) {\n  let result = [];\n  // (ids || []).forEach(id => {\n  ids.forEach(id => {\n    let genre = map.find(item => item.id === id).name;\n    // console.log('find:', genre);\n    if (genre !== undefined) {\n      result.push(genre);\n    }\n  });\n  // console.log('result:', result);\n  return result;\n}\n\nexport { namesGenres };\n","import { Loading } from \"notiflix\";\n\nexport default function loader() {\n    // const color = getComputedStyle(document.documentElement).getPropertyValue(`$ic-accent`);\n    Loading.circle('Loading ...', {svgColor: '#ff6b08'});\n}"],"names":["$2shzp","parcelRequire","$82347bf51c8e6982$export$2639bb43b9135e64","page","$b8c63253da9a1211$export$c5604fa8028da00","then","item","genres","document","querySelector","innerHTML","$b8c63253da9a1211$export$225b489b0d997c20","result","$b8c63253da9a1211$export$659b6b545718ce73","data","results","$8ed6053b63534117$export$a49a60d9fed48f00","ids","map","forEach","id","genre","find","name","undefined","push","$7Y9D8","$7a6a1e3a84aaa332$export$2e2bcd8739ae039","Loading","circle","svgColor","$b8c63253da9a1211$var$gallery","$b8c63253da9a1211$var$inputMovie","$b8c63253da9a1211$var$alert","$b8c63253da9a1211$var$nextButton","getElementById","$b8c63253da9a1211$var$prevButton","$b8c63253da9a1211$var$paginationNumbers","$b8c63253da9a1211$var$currentPage","$b8c63253da9a1211$var$disableButton","button","classList","add","setAttribute","$b8c63253da9a1211$var$enableButton","remove","removeAttribute","$b8c63253da9a1211$var$handlePageButtonsStatus","pageCount","$b8c63253da9a1211$var$handleActivePageNumber","querySelectorAll","Number","textContent","$b8c63253da9a1211$var$getDots","insertAdjacentHTML","$b8c63253da9a1211$var$getNumbers","number","isActive","$b8c63253da9a1211$var$getPagination","i","window","addEventListener","event","preventDefault","target","contains","pageIndex","value","console","log","$b8c63253da9a1211$export$5a3232bc12c1888e","$b8c63253da9a1211$var$title","async","response1","default","get","params","api_key","response","totalPages","total_pages","catch","error","e","key","$parcel$interopDefault","$50Kfe","location","reload","trim","input","response2","query","Notify","success","total_results","Math","ceil","searched","$b8c63253da9a1211$var$galleryOfMovies","length","movie1","movie","genresName","poster","poster_path","title","splice","join","release_date","slice","movieCards","movieCard1","movieId","this","$b8c63253da9a1211$var$movieCard","genre_ids"],"version":3,"file":"index.e06635f7.js.map"}