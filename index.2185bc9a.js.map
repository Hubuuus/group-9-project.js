{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/genresid-name.js","src/models/present-movies.js"],"sourcesContent":["/*\nŚCIEŻKA DZIAŁANIA PLIKUÓW JS PRZY POBIERNIU TYTUŁÓW FILMÓW Z API\n1. POPULARNE FILMY\n  - presentMovies() -> getGenres() -> fetchPopularMovies() -> createCards\n  - createCards() -> namesGenres() -> movieCard() -> html\n2. WYSZUKIWANE FILMY\n  - eventListener() -> fetchSearchedMovies() -> galleryOfMovies()\n  -> getGenres() -> createCards() -> namesGenres() ->\n  -> movieCard() -> html\n\n*/\nimport axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\nimport { namesGenres } from './genresid-name';\n// import { activeFetch, toggleHidden } from './modal-movie';\n\nlet movieId;\nconst gallery = document.querySelector('.Gallery');\nconst DEBOUNCE_DELAY = 1000;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst inputMovie = document.querySelector('.SearchInput');\nconst alert = document.querySelector('[data-header=\"alert\"]');\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n// FUNCTION AUTOMATICALLY FETCHING MOST POPULAR MOVIES\nexport const fetchPopularMovies = async () => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        // page: page,\n      },\n    })\n    .then(function (response) {\n      // console.log('popular:', response);\n      // console.log('popular results:', response.data.results);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\n// EVENT LISTENING TO SEARCHBAR INPUT\ninputMovie.addEventListener(\n  'input',\n  debounce(async event => {\n    event.preventDefault();\n\n    // const title = event.target.value.trim();\n    const title = inputMovie.value.trim();\n\n    fetchSearchedMovies(title);\n  }, DEBOUNCE_DELAY)\n);\n\n// FUNCTION FETCHIN MOVIES BY QUERY\nexport const fetchSearchedMovies = async (input, page) => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        page: page,\n      },\n    })\n    .then(response => {\n      galleryOfMovies(response);\n\n      // console.log('searched results:', response.data.results);\n      //       alert.innerHTML = ``;\n      // if (response.data.results.length === 0) {\n      //   console.log(\"error\");\n      //   setInterval(alert.innerHTML = `Search result not successful. Enter the correct movie name and search\n      //   again.`, 1000);\n      // }\n\n      alert.classList.add('hidden');\n      if (response.data.results.length === 0) {\n        alert.classList.remove('hidden');\n      }\n\n      return response;\n    })\n    .catch(() => {\n      console.log('error');\n    });\n\n  return response;\n};\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched, genres);\n  });\n}\n\n// FUNCTION GETTING GENRES FROM MOVIES\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport function createCards(movie, genres) {\n  // console.log('wynik;', movie, genres);\n  // console.log('test movie:', movie[0].genre_ids);\n  // console.log('test genre:', genres[0]);\n\n  movie.map(movie => {\n    const genresName = namesGenres(movie.genre_ids, genres);\n    movieCard(movie, genresName);\n  });\n}\n\n// export const getDetails = async movie_id => {\n//   const urlInfo = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n\n//   const response = await axios\n//     .get(urlInfo)\n//     .then(function (response) {\n//       console.log(response.data);\n//       return response.data;\n//     })\n//     .catch(function (error) {\n//       console.log(error);\n//     });\n\n//   return response;\n// };\n\nfunction movieCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" <img class =\"MoviePoster\" src=\"${poster}\" \n        onerror=\"this.src='https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520'\" \n        alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n  const movieCards = document.querySelectorAll('.MovieCard');\n  for (let movieCard of movieCards) {\n    movieCard.addEventListener('click', function () {\n      movieId = this.id;\n      // console.log('ID: ' + movieId);\n    });\n  }\n  // movieCards.forEach(el => el.addEventListener('click', toggleHidden));\n  // movieCards.forEach(el => el.addEventListener('click', e => activeFetch(e)));\n}\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());\n","function namesGenres(ids, map) {\n  let result = [];\n  // (ids || []).forEach(id => {\n  ids.forEach(id => {\n    let genre = map.find(item => item.id === id).name;\n    // console.log('find:', genre);\n    if (genre !== undefined) {\n      result.push(genre);\n    }\n  });\n  // console.log('result:', result);\n  return result;\n}\n\nexport { namesGenres };\n","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres, createCards } from './fetch-functions';\n\nexport function presentMovies() {\n  getGenres().then(item => {\n    const genres = item;\n\n    fetchPopularMovies().then(result => {\n      const popular = result.data.results;\n      createCards(popular, genres);\n    });\n  });\n}\n"],"names":["$bpxeT","parcelRequire","$3803c7cc153b9ece$var$gallery","document","querySelector","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$var$inputMovie","$3803c7cc153b9ece$var$alert","$3803c7cc153b9ece$export$225b489b0d997c20","$parcel$interopDefault","$2TvXO","mark","_callee","response1","$dIxxU","default","get","params","api_key","then","response","catch","error","console","log","_ctx","sent","addEventListener","$l1Gdk","event","title","preventDefault","value","trim","$3803c7cc153b9ece$export$5a3232bc12c1888e","input","page","response2","query","$3803c7cc153b9ece$var$galleryOfMovies","classList","add","data","results","length","remove","innerHTML","searched","$3803c7cc153b9ece$export$c5604fa8028da00","item","$3803c7cc153b9ece$export$659b6b545718ce73","response3","genres","movie1","map","movie","ids","result","genresName","poster","concat","poster_path","insertAdjacentHTML","id","splice","join","release_date","slice","movieCards","querySelectorAll","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","this","err","return","$3803c7cc153b9ece$var$movieCard","genre_ids","forEach","genre","find","name","push"],"version":3,"file":"index.2185bc9a.js.map"}