{"mappings":"iiBAAA,I,EAAAA,EAAAC,EAAA,S,uCAGMC,EAAgBC,SAASC,cAAc,4BACvCC,EAAcF,SAASC,cAAc,0BACrCE,EAASH,SAASC,cAAc,sBAEhCG,G,EAAoBC,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAKxBC,EACAC,E,kEALJF,EAAEG,iBACFC,EAAAC,QAAQC,UAAY,GACM,KAAtBF,EAAAC,QAAQC,YAAkBZ,EAAOY,UAAY,kBAE7CL,EAAMG,EAAAG,SACNL,EAAgBD,EAAIO,KAAI,SAAAC,G,OAAMC,MAAM,sCAAoDC,OAAdF,EAAG,aAAkBE,OAAPC,EAAO,mB,IAE3E,KAAtBR,EAAAC,QAAQC,YAAkBF,EAAAC,QAAQC,UAAY,IAElDO,QAAQC,IAAIZ,GACTa,MAAK,SAAAC,G,OAAaH,QAAQC,IAAIE,EAAUR,KAAI,SAAAS,G,OAAYA,EAASC,M,QACjEH,MAAK,SAAAI,GAAUA,EAAKC,SAAQ,SAAAC,G,OAAQC,EAAgBD,E,OACpDE,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,wDAbAxB,G,iCAgB1B2B,EAAmB,W,MAAG/B,EAAAR,EAAA,CAAAQ,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IAK1BC,EACAC,E,kEALJF,EAAEG,iBACFC,EAAAC,QAAQC,UAAY,GACK,KAAtBF,EAAAC,QAAQC,YAAkBZ,EAAOY,UAAY,kBAE5CL,EAAMG,EAAAwB,WACN1B,EAAgBD,EAAIO,KAAI,SAAAC,G,OAAMC,MAAM,sCAAoDC,OAAdF,EAAG,aAAkBE,OAAPC,EAAO,mB,IAE3E,KAAtBR,EAAAC,QAAQC,YAAkBF,EAAAC,QAAQC,UAAY,IAElDO,QAAQC,IAAIZ,GACTa,MAAK,SAAAC,G,OAAaH,QAAQC,IAAIE,EAAUR,KAAI,SAAAS,G,OAAYA,EAASC,M,QACjEH,MAAK,SAAAI,GAAUA,EAAKC,SAAQ,SAAAC,G,OAAQC,EAAgBD,E,OACpDE,OAAM,SAAAC,G,OAASC,QAAQC,IAAIF,E,+DAbExB,G,gCAAT,GAgBnBY,EAAS,mCAiBf,SAASU,EAAgBO,GACrB,IAAMC,EAAaD,EAAME,OAAOvB,KAAI,SAAAwB,G,OAASA,EAAMC,I,IAC/CC,EAAS,kCAAoDvB,OAAlBkB,EAAMM,aACvD/B,EAAAC,QAAQ+B,mBACN,YACA,+BACgBzB,OADekB,EAAMpB,GAAG,0BACRE,OAAhBuB,EAAO,WAGgBvB,OAHPkB,EAAMQ,MAAM,6IAInC1B,OAD8BkB,EAAMQ,MAAM,wBACF1B,OAAxCmB,EAAWQ,OAAO,EAAG,GAAGC,KAAK,MAAM,OAAmC5B,OAA9BkB,EAAMW,aAAaC,MAAM,EAAE,GAAG,mDAKrD,KAAtBrC,EAAAC,QAAQC,YAAkBZ,EAAOY,UAAY,G,CAGrDhB,EAAcoD,iBAAiB,QAAS/C,GACxCF,EAAYiD,iBAAiB,QAASf,E","sources":["src/models/add-movie.js"],"sourcesContent":["import axios from \"axios\";\nimport { gallery, addMovie, queueMovie } from \"./modal-movie\";\n\nconst btnWatchedLib = document.querySelector('[data-library=\"watched\"]');\nconst btnQueueLib = document.querySelector('[data-library=\"queue\"]');\nconst loader = document.querySelector('.Pagination-Loader');\n\nconst activeFetchLibAdd = async e => {\n    e.preventDefault();\n    gallery.innerHTML = \"\";\n    if (gallery.innerHTML === \"\") loader.innerHTML = \"LOADING MOVIES\";\n    \n  const ids = addMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`));\n  \n  if (gallery.innerHTML !== \"\") gallery.innerHTML = \"\";\n  \n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => { data.forEach(item => showAddedMovies(item)) })\n    .catch(error => console.log(error));\n};\n\nconst activeFetchLibQueue = async e => {\n    e.preventDefault();\n    gallery.innerHTML = \"\";\n   if (gallery.innerHTML === \"\") loader.innerHTML = \"LOADING MOVIES\";\n    \n  const ids = queueMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`));\n  \n  if (gallery.innerHTML !== \"\") gallery.innerHTML = \"\";\n  \n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => { data.forEach(item => showAddedMovies(item)) })\n    .catch(error => console.log(error));\n};\n\nconst apiKey = \"28e7de8a02a020e11a900cecedfaedb8\";\n\nasync function fetchItems() {\n  const params = new URLSearchParams({\n    api_key: apiKey,\n  });\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${addMovie.join()}?${params}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(\"Error: \", error);\n  }\n}\n\nfunction showAddedMovies(movie) {\n    const genresName = movie.genres.map(genre => genre.name);\n  const poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}</span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(0,4)}\n          </p>\n        </div>\n      </div>`\n    );\n    if (gallery.innerHTML !== \"\") loader.innerHTML = \"\";\n};\n\nbtnWatchedLib.addEventListener('click', activeFetchLibAdd);\nbtnQueueLib.addEventListener('click', activeFetchLibQueue);"],"names":["$bpxeT","parcelRequire","$5f5adfbac5f76673$var$btnWatchedLib","document","querySelector","$5f5adfbac5f76673$var$btnQueueLib","$5f5adfbac5f76673$var$loader","$5f5adfbac5f76673$var$activeFetchLibAdd","$parcel$interopDefault","$2TvXO","mark","_callee","e","ids","fetchRequests","preventDefault","$2KQYL","gallery","innerHTML","addMovie","map","id","fetch","concat","$5f5adfbac5f76673$var$apiKey","Promise","all","then","responses","response","json","data","forEach","item","$5f5adfbac5f76673$var$showAddedMovies","catch","error","console","log","$5f5adfbac5f76673$var$activeFetchLibQueue","queueMovie","movie","genresName","genres","genre","name","poster","poster_path","insertAdjacentHTML","title","splice","join","release_date","slice","addEventListener"],"version":3,"file":"my-library.4be9095a.js.map"}