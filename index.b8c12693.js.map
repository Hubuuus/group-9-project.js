{"mappings":"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","sources":["src/models/fetch-functions.js","src/models/present-movies.js","src/models/genresid-name.js"],"sourcesContent":["/*\nŚCIEŻKA DZIAŁANIA PLIKUÓW JS PRZY POBIERNIU TYTUŁÓW FILMÓW Z API\n1. POPULARNE FILMY\n  - presentMovies() -> getGenres() -> fetchPopularMovies()\n  - createCards() -> namesGenres() -> movieCard() -> html\n2. WYSZUKIWANE FILMY\n  - eventListener() -> fetchSearchedMovies() -> galleryOfMovies()\n  -> getGenres() -> createCards() -> namesGenres() ->\n  -> movieCard() -> html\n\n*/\nimport axios from 'axios';\nimport { presentMovies } from './present-movies';\nimport debounce from 'lodash.debounce';\nimport { namesGenres } from './genresid-name';\n\nconst gallery = document.querySelector('.Gallery');\nconst DEBOUNCE_DELAY = 1000;\nconst API_KEY = '28e7de8a02a020e11a900cecedfaedb8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst inputMovie = document.querySelector('.SearchInput');\nconst alert = document.querySelector('[data-header=\"alert\"]');\n//edit hubert paginacja\nconst nextButton = document.getElementById('Next-Button');\nconst prevButton = document.getElementById('Prev-Button');\nlet nrButton = '';\n\nconst paginationNumbers = document.getElementById('Pagination-Numbers');\n\nlet currentPage = 1;\n// let pageCount;\n// let page = 1;\n\nexport function clearGallery() {\n  gallery.innerHTML = '';\n}\n\n//Disable Page Navigation Buttons\nconst disableButton = button => {\n  button.classList.add('Disabled');\n  button.setAttribute('Disabled', true);\n};\nconst enableButton = button => {\n  button.classList.remove('Disabled');\n  button.removeAttribute('Disabled');\n};\n\nconst handlePageButtonsStatus = (page, pageCount) => {\n  if (page === 1) {\n    disableButton(prevButton);\n  } else {\n    enableButton(prevButton);\n  }\n  if (page === pageCount) {\n    disableButton(nextButton);\n  } else {\n    enableButton(nextButton);\n  }\n};\n\n//set active page number\nconst handleActivePageNumber = page => {\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    button.classList.remove('Pagination-Btn--Active');\n  });\n\n  document.querySelectorAll('.Nr-Button').forEach(button => {\n    const pageIndex = Number(button.textContent);\n    if (pageIndex == page) {\n      button.classList.add('Pagination-Btn--Active');\n    }\n  });\n};\n// hubert's set active page number\n// const updateActivePage = () => {\n//   const buttons = document.querySelectorAll('.Pagination-Numbers .Nr-Button');\n//   buttons.forEach(button => {\n//     const pageNumber = parseInt(button.innerHTML);\n//     if (pageNumber === currentPage) {\n//       button.classList.add('active');\n//     } else {\n//       button.classList.remove('active');\n//     }\n//   });\n// };\n\nconst getDots = () => {\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Pagination-Btn__Dots\" id=\"Nr-Button\">\n      ...\n      </button>\n    `\n  );\n};\n\nconst getNumbers = number => {\n  const isActive = number === currentPage ? 'Pagination-Btn--Active' : '';\n\n  paginationNumbers.insertAdjacentHTML(\n    'beforeend',\n    `\n      <button class=\"Pagination-Btn Nr-Button ${isActive}\" id=\"Nr-Button\" >\n      ${number}\n      </button>\n    `\n  );\n};\n\n//GENERATE NUMBERS IN DIV MAIN\nconst getPagination = (page, pageCount) => {\n  paginationNumbers.innerHTML = '';\n  if (page <= 5) {\n    for (let i = 1; i <= 7; i++) {\n      getNumbers(i);\n    }\n    getDots();\n    getNumbers(pageCount);\n  } else if (page >= pageCount - 5) {\n    getNumbers(1);\n    getDots();\n    for (let i = pageCount - 6; i <= pageCount; i++) {\n      getNumbers(i);\n    }\n  } else {\n    getNumbers(1);\n    getDots();\n    for (let i = page - 2; i <= page + 2; i++) {\n      getNumbers(i);\n    }\n    getDots();\n    getNumbers(pageCount);\n  }\n};\n\nwindow.addEventListener('load', () => {\n  handlePageButtonsStatus(1);\n  getPagination(1);\n  handleActivePageNumber(currentPage);\n\n  nextButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage++;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  prevButton.addEventListener('click', event => {\n    event.preventDefault();\n    currentPage--;\n    presentMovies(currentPage);\n    handlePageButtonsStatus(currentPage);\n    getPagination(currentPage);\n    handleActivePageNumber(currentPage);\n  });\n\n  paginationNumbers.addEventListener('click', event => {\n    if (event.target.classList.contains('Nr-Button')) {\n      const pageIndex = Number(event.target.textContent);\n      if (pageIndex !== currentPage) {\n        currentPage = pageIndex;\n        presentMovies(currentPage);\n        handlePageButtonsStatus(currentPage);\n        getPagination(currentPage);\n        handleActivePageNumber(currentPage);\n      }\n    }\n  });\n});\n\n// FUNCTION AUTOMATICALLY FETCHING MOST POPULAR MOVIES\nexport const fetchPopularMovies = async page => {\n  const urlPopularMovies = 'https://api.themoviedb.org/3/trending/movie/day';\n\n  const response = await axios\n    .get(urlPopularMovies, {\n      params: {\n        api_key: API_KEY,\n        page: page,\n      },\n    })\n    .then(function (response) {\n      // RENDER PAGINATION WITH TOTAL RESPONSES / 10\n      const totalPages = response.data.total_pages / 10;\n      getPagination(currentPage, totalPages);\n      handlePageButtonsStatus(currentPage, totalPages);\n      return response;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\n// OFF ENTER KEY\ninputMovie.addEventListener('keypress', function (e) {\n  if (e.key === 'Enter') {\n    e.preventDefault();\n  }\n});\n\n//EVENT LISTENING TO SEARCHBAR INPUT\ninputMovie.addEventListener(\n  'input',\n  debounce(async event => {\n    event.preventDefault();\n    if (inputMovie.value == '') {\n      return location.reload();\n    }\n\n    const title = event.target.value.trim();\n\n    fetchSearchedMovies(title);\n  }, DEBOUNCE_DELAY)\n);\n\n// FUNCTION FETCHIN MOVIES BY QUERY\n// deleted from argument pageNumber\nexport const fetchSearchedMovies = async input => {\n  const urlSearchedMovies = 'https://api.themoviedb.org/3/search/movie';\n\n  const response = await axios\n    .get(urlSearchedMovies, {\n      params: {\n        api_key: API_KEY,\n        query: input,\n        // page: pageNumber,\n      },\n    })\n    .then(response => {\n      galleryOfMovies(response);\n      // console.log('searched results:', response.data.results);\n      //       alert.innerHTML = ``;\n      // if (response.data.results.length === 0) {\n      //   console.log(\"error\");\n      //   setInterval(alert.innerHTML = `Search result not successful. Enter the correct movie name and search\n      //   again.`, 1000);\n      // }\n      alert.classList.add('hidden');\n      if (response.data.results.length === 0) {\n        alert.classList.remove('hidden');\n      }\n\n      return response;\n    })\n    .catch(() => {\n      console.log('error');\n    });\n\n  return response;\n};\n\nfunction galleryOfMovies(response) {\n  clearGallery();\n  // console.log('RRRR', response.data.results);\n  const searched = response.data.results;\n  getGenres().then(item => {\n    const genres = item;\n    createCards(searched, genres);\n  });\n}\n\n// FUNCTION GETTING GENRES FROM MOVIES\nexport const getGenres = async () => {\n  const urlGenres = 'https://api.themoviedb.org/3/genre/movie/list';\n  // const urlGenres = \"https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`;\n\n  const response = await axios\n    .get(urlGenres, {\n      params: {\n        api_key: API_KEY,\n      },\n    })\n    .then(function (response) {\n      return response.data.genres;\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  return response;\n};\n\nexport function createCards(movie, genres) {\n  // console.log('wynik;', movie, genres);\n  // console.log('test movie:', movie[0].genre_ids);\n  // console.log('test genre:', genres[0]);\n\n  movie.map(movie => {\n    const genresName = namesGenres(movie.genre_ids, genres);\n    movieCard(movie, genresName);\n  });\n}\n\nfunction movieCard(movie, genresName) {\n  let poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" <img class =\"MoviePoster\" src=\"${poster}\" \n        onerror=\"this.src='https://ik.imagekit.io/paulinas/noTMDBposter.jpg?ik-sdk-version=javascript-1.4.3&updatedAt=1676735394520'\" \n        alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle dark-mode\">${movie.title}\n          </span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(\n      0,\n      4\n    )}\n          </p>\n        </div>\n      </div>`\n  );\n  const movieCards = document.querySelectorAll('.MovieCard');\n  for (let movieCard of movieCards) {\n    movieCard.addEventListener('click', function () {\n      movieId = this.id;\n      // console.log('ID: ' + movieId);\n    });\n  }\n  // movieCards.forEach(el => el.addEventListener('click', toggleHidden));\n  // movieCards.forEach(el => el.addEventListener('click', e => activeFetch(e)));\n}\n\ndocument.addEventListener('DOMContentLoaded', presentMovies());\n","import { fetchPopularMovies } from './fetch-functions';\nimport { getGenres, createCards } from './fetch-functions';\n\nexport function presentMovies(page) {\n  getGenres().then(item => {\n    const genres = item;\n    //edit hubert paginacja\n    document.querySelector('.Gallery').innerHTML = '';\n    //edit hubert paginacja\n    fetchPopularMovies(page).then(result => {\n      const popular = result.data.results;\n\n      createCards(popular, genres);\n    });\n  });\n}\n","function namesGenres(ids, map) {\n  let result = [];\n  // (ids || []).forEach(id => {\n  ids.forEach(id => {\n    let genre = map.find(item => item.id === id).name;\n    // console.log('find:', genre);\n    if (genre !== undefined) {\n      result.push(genre);\n    }\n  });\n  // console.log('result:', result);\n  return result;\n}\n\nexport { namesGenres };\n"],"names":["$bpxeT","parcelRequire","$633f7577846d9a47$export$2639bb43b9135e64","page","$3803c7cc153b9ece$export$c5604fa8028da00","then","item","genres","document","querySelector","innerHTML","$3803c7cc153b9ece$export$225b489b0d997c20","result","$3803c7cc153b9ece$export$659b6b545718ce73","data","results","$3803c7cc153b9ece$var$gallery","$3803c7cc153b9ece$var$API_KEY","$3803c7cc153b9ece$var$inputMovie","$3803c7cc153b9ece$var$alert","$3803c7cc153b9ece$var$nextButton","getElementById","$3803c7cc153b9ece$var$prevButton","$3803c7cc153b9ece$var$paginationNumbers","$3803c7cc153b9ece$var$currentPage","$3803c7cc153b9ece$var$disableButton","button","classList","add","setAttribute","$3803c7cc153b9ece$var$enableButton","remove","removeAttribute","$3803c7cc153b9ece$var$handlePageButtonsStatus","pageCount","$3803c7cc153b9ece$var$handleActivePageNumber","querySelectorAll","forEach","Number","textContent","$3803c7cc153b9ece$var$getDots","insertAdjacentHTML","$3803c7cc153b9ece$var$getNumbers","number","isActive","concat","$3803c7cc153b9ece$var$getPagination","i","i1","i2","window","addEventListener","event","preventDefault","target","contains","pageIndex","$parcel$interopDefault","$2TvXO","mark","_callee","response1","$dIxxU","default","get","params","api_key","response","totalPages","total_pages","catch","error","console","log","_ctx","sent","e","key","$l1Gdk","title","value","location","reload","trim","$3803c7cc153b9ece$export$5a3232bc12c1888e","input","response2","query","$3803c7cc153b9ece$var$galleryOfMovies","length","searched","response3","movie1","map","movie","ids","genresName","poster","poster_path","id","splice","join","release_date","slice","movieCards","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","movieId","this","err","return","$3803c7cc153b9ece$var$movieCard","genre_ids","genre","find","name","push"],"version":3,"file":"index.b8c12693.js.map"}