{"mappings":"oeAAAA,EAAA,a,aAGA,MAAMC,EAAgBC,SAASC,cAAc,4BACvCC,EAAcF,SAASC,cAAc,0BACrCE,EAASH,SAASC,cAAc,sBAkChCG,EAAS,mCAiBf,SAASC,EAAgBC,GACrB,MAAMC,EAAaD,EAAME,OAAOC,KAAIC,GAASA,EAAMC,OAC/CC,EAAS,kCAAkCN,EAAMO,cACvDC,EAAAC,QAAQC,mBACN,YACA,+BAA+BV,EAAMW,2BACrBL,WAAgBN,EAAMY,iJAGCZ,EAAMY,4BACpCX,EAAWY,OAAO,EAAG,GAAGC,KAAK,WAAWd,EAAMe,aAAaC,MAAM,EAAE,oDAKlD,KAAtBR,EAAAC,QAAQQ,YAAkBpB,EAAOoB,UAAY,G,CAGrDxB,EAAcyB,iBAAiB,SAnELC,MAAMC,IAC5BA,EAAEC,iBACFb,EAAAC,QAAQQ,UAAY,GACM,KAAtBT,EAAAC,QAAQQ,YAAkBpB,EAAOoB,UAAY,kBAEnD,MACMK,EADMd,EAAAe,SACcpB,KAAIQ,GAAMa,MAAM,sCAAsCb,aAAcb,sBAEpE,KAAtBU,EAAAC,QAAQQ,YAAkBT,EAAAC,QAAQQ,UAAY,IAElDQ,QAAQC,IAAIJ,GACTK,MAAKC,GAAaH,QAAQC,IAAIE,EAAUzB,KAAI0B,GAAYA,EAASC,YACjEH,MAAKI,IAAUA,EAAKC,SAAQC,GAAQlC,EAAgBkC,IAAM,IAC1DC,OAAMC,GAASC,QAAQC,IAAIF,IAAO,IAuDvCvC,EAAYsB,iBAAiB,SApDDC,MAAMC,IAC9BA,EAAEC,iBACFb,EAAAC,QAAQQ,UAAY,GACK,KAAtBT,EAAAC,QAAQQ,YAAkBpB,EAAOoB,UAAY,kBAElD,MACMK,EADMd,EAAA8B,WACcnC,KAAIQ,GAAMa,MAAM,sCAAsCb,aAAcb,sBAEpE,KAAtBU,EAAAC,QAAQQ,YAAkBT,EAAAC,QAAQQ,UAAY,IAElDQ,QAAQC,IAAIJ,GACTK,MAAKC,GAAaH,QAAQC,IAAIE,EAAUzB,KAAI0B,GAAYA,EAASC,YACjEH,MAAKI,IAAUA,EAAKC,SAAQC,GAAQlC,EAAgBkC,IAAM,IAC1DC,OAAMC,GAASC,QAAQC,IAAIF,IAAO","sources":["src/models/add-movie.js"],"sourcesContent":["import axios from \"axios\";\nimport { gallery, addMovie, queueMovie } from \"./modal-movie\";\n\nconst btnWatchedLib = document.querySelector('[data-library=\"watched\"]');\nconst btnQueueLib = document.querySelector('[data-library=\"queue\"]');\nconst loader = document.querySelector('.Pagination-Loader');\n\nconst activeFetchLibAdd = async e => {\n    e.preventDefault();\n    gallery.innerHTML = \"\";\n    if (gallery.innerHTML === \"\") loader.innerHTML = \"LOADING MOVIES\";\n    \n  const ids = addMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`));\n  \n  if (gallery.innerHTML !== \"\") gallery.innerHTML = \"\";\n  \n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => { data.forEach(item => showAddedMovies(item)) })\n    .catch(error => console.log(error));\n};\n\nconst activeFetchLibQueue = async e => {\n    e.preventDefault();\n    gallery.innerHTML = \"\";\n   if (gallery.innerHTML === \"\") loader.innerHTML = \"LOADING MOVIES\";\n    \n  const ids = queueMovie; // przykładowe id filmów\n  const fetchRequests = ids.map(id => fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}&language=en-US`));\n  \n  if (gallery.innerHTML !== \"\") gallery.innerHTML = \"\";\n  \n  Promise.all(fetchRequests)\n    .then(responses => Promise.all(responses.map(response => response.json())))\n    .then(data => { data.forEach(item => showAddedMovies(item)) })\n    .catch(error => console.log(error));\n};\n\nconst apiKey = \"28e7de8a02a020e11a900cecedfaedb8\";\n\nasync function fetchItems() {\n  const params = new URLSearchParams({\n    api_key: apiKey,\n  });\n\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${addMovie.join()}?${params}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(\"Error: \", error);\n  }\n}\n\nfunction showAddedMovies(movie) {\n    const genresName = movie.genres.map(genre => genre.name);\n  const poster = `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n  gallery.insertAdjacentHTML(\n    'beforeend',\n    ` <div class=\"MovieCard\" id=\"${movie.id}\">\n        <img src=\"${poster}\" alt=\"${movie.title}\" loading=\"lazy\" /> \n        <div class=\"MovieCardInfo\">\n          <p class=\"MovieCardData\">\n            <span class=\"MovieCardTitle\">${movie.title}</span>\n           ${genresName.splice(0, 3).join(', ')} | ${movie.release_date.slice(0,4)}\n          </p>\n        </div>\n      </div>`\n    );\n    if (gallery.innerHTML !== \"\") loader.innerHTML = \"\";\n};\n\nbtnWatchedLib.addEventListener('click', activeFetchLibAdd);\nbtnQueueLib.addEventListener('click', activeFetchLibQueue);"],"names":["parcelRequire","$7118a556a4dc0501$var$btnWatchedLib","document","querySelector","$7118a556a4dc0501$var$btnQueueLib","$7118a556a4dc0501$var$loader","$7118a556a4dc0501$var$apiKey","$7118a556a4dc0501$var$showAddedMovies","movie","genresName","genres","map","genre","name","poster","poster_path","$5P1lj","gallery","insertAdjacentHTML","id","title","splice","join","release_date","slice","innerHTML","addEventListener","async","e","preventDefault","fetchRequests","addMovie","fetch","Promise","all","then","responses","response","json","data","forEach","item","catch","error","console","log","queueMovie"],"version":3,"file":"my-library.bee0bc8c.js.map"}